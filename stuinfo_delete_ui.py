# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'stuinfo_delete_ui.ui'
#
# Created by: PyQt5 UI code generator 5.15.2
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
import pyodbc
from PyQt5.QtCore import QStringListModel
class Ui_Window_stuinfo_delete(object):
    def setupUi(self, Window_stuinfo_delete):
        Window_stuinfo_delete.setObjectName("Window_stuinfo_delete")
        Window_stuinfo_delete.resize(1280, 720)
        self.pushButton_inquiry = QtWidgets.QPushButton(Window_stuinfo_delete)
        self.pushButton_inquiry.setGeometry(QtCore.QRect(450, 110, 100, 40))
        font = QtGui.QFont()
        font.setFamily("黑体")
        font.setPointSize(16)
        self.pushButton_inquiry.setFont(font)
        self.pushButton_inquiry.setObjectName("pushButton_inquiry")
        self.label_title2 = QtWidgets.QLabel(Window_stuinfo_delete)
        self.label_title2.setGeometry(QtCore.QRect(20, 110, 100, 40))
        font = QtGui.QFont()
        font.setFamily("黑体")
        font.setPointSize(16)
        self.label_title2.setFont(font)
        self.label_title2.setObjectName("label_title2")
        self.listView_stuinfo = QtWidgets.QListView(Window_stuinfo_delete)
        self.listView_stuinfo.setGeometry(QtCore.QRect(10, 180, 1260, 520))
        self.listView_stuinfo.setObjectName("listView_stuinfo")
        self.lineEdit_stuno = QtWidgets.QLineEdit(Window_stuinfo_delete)
        self.lineEdit_stuno.setGeometry(QtCore.QRect(130, 110, 300, 40))
        font = QtGui.QFont()
        font.setFamily("黑体")
        font.setPointSize(16)
        self.lineEdit_stuno.setFont(font)
        self.lineEdit_stuno.setObjectName("lineEdit_stuno")
        self.lineEdit_stuno.setValidator(QtGui.QIntValidator())
        self.label_title1 = QtWidgets.QLabel(Window_stuinfo_delete)
        self.label_title1.setGeometry(QtCore.QRect(490, 20, 300, 60))
        font = QtGui.QFont()
        font.setFamily("黑体")
        font.setPointSize(28)
        self.label_title1.setFont(font)
        self.label_title1.setObjectName("label_title1")
        self.pushButton_delete = QtWidgets.QPushButton(Window_stuinfo_delete)
        self.pushButton_delete.setGeometry(QtCore.QRect(570, 110, 100, 40))
        font = QtGui.QFont()
        font.setFamily("黑体")
        font.setPointSize(16)
        self.pushButton_delete.setFont(font)
        self.pushButton_delete.setObjectName("pushButton_delete")
        self.label_tip = QtWidgets.QLabel(Window_stuinfo_delete)
        self.label_tip.setGeometry(QtCore.QRect(700, 110, 521, 41))
        font = QtGui.QFont()
        font.setFamily("黑体")
        font.setPointSize(16)
        self.label_tip.setFont(font)
        self.label_tip.setText("")
        self.label_tip.setObjectName("label_tip")

        self.retranslateUi(Window_stuinfo_delete)
        QtCore.QMetaObject.connectSlotsByName(Window_stuinfo_delete)
        self.pushButton_inquiry.clicked.connect(lambda: self.inquiry())
        self.pushButton_delete.clicked.connect(lambda: self.delete())
    def retranslateUi(self, Window_stuinfo_delete):
        _translate = QtCore.QCoreApplication.translate
        Window_stuinfo_delete.setWindowTitle(_translate("Window_stuinfo_delete", "Form"))
        self.pushButton_inquiry.setText(_translate("Window_stuinfo_delete", "查询"))
        self.label_title2.setText(_translate("Window_stuinfo_delete", "学  号："))
        self.label_title1.setText(_translate("Window_stuinfo_delete", "删除学生信息"))
        self.pushButton_delete.setText(_translate("Window_stuinfo_delete", "删除"))

    def inquiry(self):
        sno = self.lineEdit_stuno.text()
        self.qList = ["学号\t\t\t姓名\t\t性别\t\t班级\t\t年龄", ]
        conn = pyodbc.connect(r'DRIVER={SQL Server Native Client 11.0};'
                              r'SERVER=Beta;'
                              r'DATABASE=Curriculum_design;'
                              r'UID=Pdocw;'
                              r'PWD=123456'
                              )
        cur = conn.cursor()
        if sno != '':
            cur.execute("SELECT * FROM xsxx WHERE Sno = '" + sno + "'")
        else:
            return
        row = cur.fetchone()
        if not row:
            QtWidgets.QMessageBox.warning(QtWidgets.QWidget(), "错误", "学号不存在", QtWidgets.QMessageBox.Yes,
                                          QtWidgets.QMessageBox.Yes)
            conn.close()
        else:
            while row:
                self.qList.append(str(row[0]) + '\t\t' + str(row[1]) + '\t\t' + str(row[2]) + '\t\t' + str(row[3]) + '\t\t' + str(row[4]))
                row = cur.fetchone()
            conn.close()
        slm = QStringListModel(self.qList)
        self.listView_stuinfo.setModel(slm)

    def delete(self):
        sno = self.lineEdit_stuno.text()
        conn = pyodbc.connect(r'DRIVER={SQL Server Native Client 11.0};'
                              r'SERVER=Beta;'
                              r'DATABASE=Curriculum_design;'
                              r'UID=Pdocw;'
                              r'PWD=123456'
                              )
        cur = conn.cursor()
        if sno != '':
            cur.execute("SELECT * FROM xsxx WHERE Sno = '" + sno + "'")
        row_xsxx = cur.fetchone()
        cur.execute("SELECT * FROM cjpm WHERE Sno = '" + sno + "'")
        row_cjpm = cur.fetchone()
        if not row_xsxx:
            QtWidgets.QMessageBox.warning(QtWidgets.QWidget(), "错误", "学号不存在", QtWidgets.QMessageBox.Yes,
                                          QtWidgets.QMessageBox.Yes)
            conn.commit()
            conn.close()
        elif row_cjpm:
            QtWidgets.QMessageBox.warning(QtWidgets.QWidget(), "警告", "该生有成绩，不可删除！", QtWidgets.QMessageBox.Yes,
                                          QtWidgets.QMessageBox.Yes)
        else:
            cur.execute("delete from xsxx WHERE Sno =" + sno)
            self.label_tip.setText("已成功删除！")
            self.qList = []
            slm = QStringListModel(self.qList)
            self.listView_stuinfo.setModel(slm)
            conn.commit()
            conn.close()


