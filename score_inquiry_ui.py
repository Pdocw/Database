# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'score_inquiry_ui.ui'
#
# Created by: PyQt5 UI code generator 5.15.2
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.

import pymssql
import pyodbc
from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtCore import QStringListModel

class Ui_Window_score_inquiry(object):
    def setupUi(self, Window_score_inquiry):
        Window_score_inquiry.setObjectName("Window_score_inquiry")
        Window_score_inquiry.resize(1280, 720)
        Window_score_inquiry.setMinimumSize(QtCore.QSize(1280, 720))
        Window_score_inquiry.setMaximumSize(QtCore.QSize(1280, 720))
        self.listView_score = QtWidgets.QListView(Window_score_inquiry)
        self.listView_score.setGeometry(QtCore.QRect(10, 180, 1260, 501))
        self.listView_score.setObjectName("listView_score")
        self.label_title1 = QtWidgets.QLabel(Window_score_inquiry)
        self.label_title1.setGeometry(QtCore.QRect(20, 110, 100, 40))
        font = QtGui.QFont()
        font.setFamily("黑体")
        font.setPointSize(16)
        self.label_title1.setFont(font)
        self.label_title1.setObjectName("label_title1")
        self.lineEdit_stuno = QtWidgets.QLineEdit(Window_score_inquiry)
        self.lineEdit_stuno.setGeometry(QtCore.QRect(130, 110, 300, 40))
        font = QtGui.QFont()
        font.setFamily("黑体")
        font.setPointSize(16)
        self.lineEdit_stuno.setFont(font)
        self.lineEdit_stuno.setObjectName("lineEdit_stuno")
        self.lineEdit_stuno.setValidator(QtGui.QIntValidator())
        self.pushButton_inquiry = QtWidgets.QPushButton(Window_score_inquiry)
        self.pushButton_inquiry.setGeometry(QtCore.QRect(450, 110, 100, 40))
        font = QtGui.QFont()
        font.setFamily("黑体")
        font.setPointSize(16)
        self.pushButton_inquiry.setFont(font)
        self.pushButton_inquiry.setObjectName("pushButton_inquiry")
        self.label_title2 = QtWidgets.QLabel(Window_score_inquiry)
        self.label_title2.setGeometry(QtCore.QRect(545, 20, 190, 60))
        font = QtGui.QFont()
        font.setFamily("黑体")
        font.setPointSize(28)
        self.label_title2.setFont(font)
        self.label_title2.setObjectName("label_title2")

        self.username = ""

        self.retranslateUi(Window_score_inquiry)
        QtCore.QMetaObject.connectSlotsByName(Window_score_inquiry)
        self.init()
        self.pushButton_inquiry.clicked.connect(lambda: self.inquiry())

    def retranslateUi(self, Window_score_inquiry):
        _translate = QtCore.QCoreApplication.translate
        Window_score_inquiry.setWindowTitle(_translate("Window_score_inquiry", "Form"))
        self.label_title1.setText(_translate("Window_score_inquiry", "学  号："))
        self.pushButton_inquiry.setText(_translate("Window_score_inquiry", "查询"))
        self.label_title2.setText(_translate("Window_score_inquiry", "成绩查询"))

    def init(self):
        with open("username.txt", 'r') as f:
            self.username = f.read()
        if self.username != 'admin':
            self.lineEdit_stuno.setText(self.username)
            return
        else:
            slm = QStringListModel()
            self.qList = ["学号\t\t姓名\t班级\t排名\t总计成绩\t线形代数\t政治经济原理\t数据结构\t英语\tC++\t电子技术\t计算机组成\t计算机网络\t哲学原理\t数值分析\t体育"]
            conn = pyodbc.connect(r'DRIVER={SQL Server Native Client 11.0};'
                                  r'SERVER=Beta;'
                                  r'DATABASE=Curriculum_design;'
                                  r'UID=Pdocw;'
                                  r'PWD=123456'
                                  )
            cur = conn.cursor()
            cur.execute("SELECT cjpm.Sno, Sname, Sclass, S_rank, TotalScore, temp_db.LA, temp_db.PPE, temp_db.DS, temp_db.English, temp_db.CPP, temp_db.ET, temp_db.CP, temp_db.CN, temp_db.PP, temp_db.NA, temp_db.PE FROM (SELECT Sno, SUM(CASE WHEN xxxx.Cno = '001' THEN Score else null end) AS LA,SUM(CASE WHEN xxxx.Cno = '002' THEN Score ELSE NULL END) AS PPE,SUM(CASE WHEN xxxx.Cno = '003' THEN Score ELSE NULL END) AS DS,SUM(CASE WHEN xxxx.Cno = '004' THEN Score ELSE NULL END) AS English,SUM(CASE WHEN xxxx.Cno = '005' THEN Score ELSE NULL END) AS CPP,SUM(CASE WHEN xxxx.Cno = '006' THEN Score ELSE NULL END) AS ET,SUM(CASE WHEN xxxx.Cno = '007' THEN Score ELSE NULL END) AS CP,SUM(CASE WHEN xxxx.Cno = '008' THEN Score ELSE NULL END) AS CN,SUM(CASE WHEN xxxx.Cno = '009' THEN Score ELSE NULL END) AS PP,SUM(CASE WHEN xxxx.Cno = '010' THEN Score ELSE NULL END) AS NA,SUM(CASE WHEN xxxx.Cno = '011' THEN Score ELSE NULL END) AS PE FROM xxxx GROUP BY Sno) AS temp_db, (select RANK() OVER(order by TotalScore DESC) as S_rank, * from cjpm) as cjpm WHERE temp_db.Sno = cjpm.Sno ORDER BY TotalScore DESC")
            row = cur.fetchone()
            while row:
                self.qList.append(str(row[0]) + '\t' + str(row[1]) + '\t' + str(row[2]) + '\t' +str(row[3])
                                  + '\t' + str(row[4]) + '\t' + str(row[5]) + '\t' + str(row[6])+ '\t\t'
                                  + str(row[7]) + '\t' + str(row[8]) + '\t' + str(row[9]) + '\t'
                                  + str(row[10]) + '\t' + str(row[11]) + '\t' + str(row[12]) + '\t'
                                  + str(row[13]) + '\t' + str(row[14]) + '\t' + str(row[15]))
                row = cur.fetchone()
            conn.close()

            slm = QStringListModel(self.qList)
            self.listView_score.setModel(slm)

    def inquiry(self):
        sno = self.lineEdit_stuno.text()
        conn = pyodbc.connect(r'DRIVER={SQL Server Native Client 11.0};'
                              r'SERVER=Beta;'
                              r'DATABASE=Curriculum_design;'
                              r'UID=Pdocw;'
                              r'PWD=123456'
                              )
        cur = conn.cursor()
        self.qList = ["学号\t\t姓名\t班级\t排名\t总计成绩\t线形代数\t政治经济原理\t数据结构\t英语\tC++\t电子技术\t计算机组成\t计算机网络\t哲学原理\t数值分析\t体育"]

        if self.username == 'admin' :
            if sno != '':
                cur.execute(
                    "SELECT * FROM (SELECT cjpm.Sno, Sname, Sclass, S_rank, TotalScore, temp_db.LA, temp_db.PPE, temp_db.DS, temp_db.English, temp_db.CPP, temp_db.ET, temp_db.CP, temp_db.CN, temp_db.PP, temp_db.NA, temp_db.PE FROM (SELECT Sno, SUM(CASE WHEN xxxx.Cno = '001' THEN Score else null end) AS LA,SUM(CASE WHEN xxxx.Cno = '002' THEN Score ELSE NULL END) AS PPE,SUM(CASE WHEN xxxx.Cno = '003' THEN Score ELSE NULL END) AS DS,SUM(CASE WHEN xxxx.Cno = '004' THEN Score ELSE NULL END) AS English,SUM(CASE WHEN xxxx.Cno = '005' THEN Score ELSE NULL END) AS CPP,SUM(CASE WHEN xxxx.Cno = '006' THEN Score ELSE NULL END) AS ET,SUM(CASE WHEN xxxx.Cno = '007' THEN Score ELSE NULL END) AS CP,SUM(CASE WHEN xxxx.Cno = '008' THEN Score ELSE NULL END) AS CN,SUM(CASE WHEN xxxx.Cno = '009' THEN Score ELSE NULL END) AS PP,SUM(CASE WHEN xxxx.Cno = '010' THEN Score ELSE NULL END) AS NA,SUM(CASE WHEN xxxx.Cno = '011' THEN Score ELSE NULL END) AS PE FROM xxxx GROUP BY Sno) AS temp_db, (select RANK() OVER(order by TotalScore DESC) as S_rank, * from cjpm) as cjpm WHERE temp_db.Sno = cjpm.Sno) as cjcx_jcb WHERE Sno = '" + sno + "'")
                row = cur.fetchone()
                if not row:
                    QtWidgets.QMessageBox.warning(QtWidgets.QWidget(), "提示", "学号不存在！请重新输入！", QtWidgets.QMessageBox.Yes,
                                                  QtWidgets.QMessageBox.Yes)
                    self.qList.append(
                        'NULL\tNULL\tNULL\tNULL\tNULL\tNULL\tNULL\tNULL\tNULL\tNULL\tNULL\tNULL\tNULL\tNULL\tNULL\tNULL\tNULL\tNULL\tNULL')
                else:
                    while row:
                        self.qList.append(str(row[0]) + '\t' + str(row[1]) + '\t' + str(row[2]) + '\t' + str(row[3])
                                          + '\t' + str(row[4]) + '\t' + str(row[5]) + '    \t' + str(row[6]) + '\t\t'
                                          + str(row[7]) + '\t' + str(row[8]) + '\t' + str(row[9]) + '\t'
                                          + str(row[10]) + '\t' + str(row[11]) + '\t' + str(row[12]) + '\t'
                                          + str(row[13]) + '\t' + str(row[14]) + '\t' + str(row[15]))
                        row = cur.fetchone()
                    conn.close()
                slm = QStringListModel(self.qList)
                self.listView_score.setModel(slm)
            else:
                self.init()
        elif self.username != 'admin' and sno != self.username:
            QtWidgets.QMessageBox.warning(QtWidgets.QWidget(), "警告", "不可以查询除自己之外的信息", QtWidgets.QMessageBox.Yes,
                                          QtWidgets.QMessageBox.Yes)
            return
        elif self.username != 'admin' and sno == self.username:
            cur.execute(
                "SELECT * FROM (SELECT cjpm.Sno, Sname, Sclass, S_rank, TotalScore, temp_db.LA, temp_db.PPE, temp_db.DS, temp_db.English, temp_db.CPP, temp_db.ET, temp_db.CP, temp_db.CN, temp_db.PP, temp_db.NA, temp_db.PE FROM (SELECT Sno, SUM(CASE WHEN xxxx.Cno = '001' THEN Score else null end) AS LA,SUM(CASE WHEN xxxx.Cno = '002' THEN Score ELSE NULL END) AS PPE,SUM(CASE WHEN xxxx.Cno = '003' THEN Score ELSE NULL END) AS DS,SUM(CASE WHEN xxxx.Cno = '004' THEN Score ELSE NULL END) AS English,SUM(CASE WHEN xxxx.Cno = '005' THEN Score ELSE NULL END) AS CPP,SUM(CASE WHEN xxxx.Cno = '006' THEN Score ELSE NULL END) AS ET,SUM(CASE WHEN xxxx.Cno = '007' THEN Score ELSE NULL END) AS CP,SUM(CASE WHEN xxxx.Cno = '008' THEN Score ELSE NULL END) AS CN,SUM(CASE WHEN xxxx.Cno = '009' THEN Score ELSE NULL END) AS PP,SUM(CASE WHEN xxxx.Cno = '010' THEN Score ELSE NULL END) AS NA,SUM(CASE WHEN xxxx.Cno = '011' THEN Score ELSE NULL END) AS PE FROM xxxx GROUP BY Sno) AS temp_db, (select RANK() OVER(order by TotalScore DESC) as S_rank, * from cjpm) as cjpm WHERE temp_db.Sno = cjpm.Sno) as cjcx_jcb WHERE Sno = '" + sno + "'")
            row = cur.fetchone()
            if not row:
                QtWidgets.QMessageBox.warning(QtWidgets.QWidget(), "提示", "学号不存在！请重新输入！", QtWidgets.QMessageBox.Yes,
                                              QtWidgets.QMessageBox.Yes)
                self.qList.append(
                    'NULL\tNULL\tNULL\tNULL\tNULL\tNULL\tNULL\tNULL\tNULL\tNULL\tNULL\tNULL\tNULL\tNULL\tNULL\tNULL\tNULL\tNULL\tNULL')
            else:
                while row:
                    self.qList.append(str(row[0]) + '\t' + str(row[1]) + '\t' + str(row[2]) + '\t' + str(row[3])
                                      + '\t' + str(row[4]) + '\t' + str(row[5]) + '    \t' + str(row[6]) + '\t\t'
                                      + str(row[7]) + '\t' + str(row[8]) + '\t' + str(row[9]) + '\t'
                                      + str(row[10]) + '\t' + str(row[11]) + '\t' + str(row[12]) + '\t'
                                      + str(row[13]) + '\t' + str(row[14]) + '\t' + str(row[15]))
                    row = cur.fetchone()
                conn.close()
            slm = QStringListModel(self.qList)
            self.listView_score.setModel(slm)

