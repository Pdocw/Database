# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'course_inquiry_ui.ui'
#
# Created by: PyQt5 UI code generator 5.15.2
#
# WARNING: Any manual modifys made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


import pyodbc

from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtCore import QStringListModel


class Ui_Window_course_inquiry(object):
    def setupUi(self, Window_course_inquiry):
        Window_course_inquiry.setObjectName("Window_course_inquiry")
        Window_course_inquiry.resize(1280, 720)
        Window_course_inquiry.setMinimumSize(QtCore.QSize(1280, 720))
        Window_course_inquiry.setMaximumSize(QtCore.QSize(1280, 720))
        self.listView_course = QtWidgets.QListView(Window_course_inquiry)
        self.listView_course.setGeometry(QtCore.QRect(600, 20, 660, 641))
        self.listView_course.setObjectName("listView_course")
        self.label_title1 = QtWidgets.QLabel(Window_course_inquiry)
        self.label_title1.setGeometry(QtCore.QRect(40, 130, 400, 40))
        font = QtGui.QFont()
        font.setFamily("黑体")
        font.setPointSize(16)
        self.label_title1.setFont(font)
        self.label_title1.setObjectName("label_title1")
        self.label_title2 = QtWidgets.QLabel(Window_course_inquiry)
        self.label_title2.setGeometry(QtCore.QRect(40, 190, 100, 40))
        font = QtGui.QFont()
        font.setFamily("黑体")
        font.setPointSize(16)
        self.label_title2.setFont(font)
        self.label_title2.setObjectName("label_title2")
        self.label_title3 = QtWidgets.QLabel(Window_course_inquiry)
        self.label_title3.setGeometry(QtCore.QRect(40, 260, 100, 41))
        font = QtGui.QFont()
        font.setFamily("黑体")
        font.setPointSize(16)
        self.label_title3.setFont(font)
        self.label_title3.setObjectName("label_title3")
        self.label_title4 = QtWidgets.QLabel(Window_course_inquiry)
        self.label_title4.setGeometry(QtCore.QRect(40, 20, 300, 60))
        font = QtGui.QFont()
        font.setFamily("黑体")
        font.setPointSize(28)
        self.label_title4.setFont(font)
        self.label_title4.setObjectName("label_title3")
        self.lineEdit_coursename = QtWidgets.QLineEdit(Window_course_inquiry)
        self.lineEdit_coursename.setGeometry(QtCore.QRect(150, 190, 300, 40))
        font = QtGui.QFont()
        font.setFamily("黑体")
        font.setPointSize(16)
        self.lineEdit_coursename.setFont(font)
        self.lineEdit_coursename.setObjectName("lineEdit_coursename")
        self.lineEdit_courseno = QtWidgets.QLineEdit(Window_course_inquiry)
        self.lineEdit_courseno.setGeometry(QtCore.QRect(150, 260, 300, 40))
        font = QtGui.QFont()
        font.setFamily("黑体")
        font.setPointSize(16)
        self.lineEdit_courseno.setFont(font)
        self.lineEdit_courseno.setObjectName("lineEdit_courseno")
        self.lineEdit_courseno.setValidator(QtGui.QIntValidator())
        self.pushButton_clear1 = QtWidgets.QPushButton(Window_course_inquiry)
        self.pushButton_clear1.setGeometry(QtCore.QRect(470, 190, 90, 40))
        font = QtGui.QFont()
        font.setFamily("黑体")
        font.setPointSize(16)
        self.pushButton_clear1.setFont(font)
        self.pushButton_clear1.setObjectName("pushButton_clear1")
        self.pushButton_clear2 = QtWidgets.QPushButton(Window_course_inquiry)
        self.pushButton_clear2.setGeometry(QtCore.QRect(470, 260, 90, 40))
        font = QtGui.QFont()
        font.setFamily("黑体")
        font.setPointSize(16)
        self.pushButton_clear2.setFont(font)
        self.pushButton_clear2.setObjectName("pushButton_clear2")
        self.pushButton_inquiry = QtWidgets.QPushButton(Window_course_inquiry)
        self.pushButton_inquiry.setGeometry(QtCore.QRect(40, 330, 520, 40))
        font = QtGui.QFont()
        font.setFamily("黑体")
        font.setPointSize(16)
        self.pushButton_inquiry.setFont(font)
        self.pushButton_inquiry.setObjectName("pushButton_inquiry")

        self.retranslateUi(Window_course_inquiry)
        QtCore.QMetaObject.connectSlotsByName(Window_course_inquiry)

        self.username = ""
        self.init()
        self.pushButton_clear1.clicked.connect(lambda: self.clear())
        self.pushButton_clear2.clicked.connect(lambda: self.clear())
        self.pushButton_inquiry.clicked.connect(lambda: self.inquiry())

    def retranslateUi(self, Window_course_inquiry):
        _translate = QtCore.QCoreApplication.translate
        Window_course_inquiry.setWindowTitle(_translate("Window_course_inquiry", "Form"))
        self.label_title1.setText(_translate("Window_course_inquiry", "请输入查询条件（二选一）"))
        self.label_title2.setText(_translate("Window_course_inquiry", "课程名："))
        self.label_title3.setText(_translate("Window_course_inquiry", "课程号："))
        self.label_title4.setText(_translate("Window_course_inquiry", "开课情况查询"))
        self.pushButton_clear1.setText(_translate("Window_course_inquiry", "清空"))
        self.pushButton_clear2.setText(_translate("Window_course_inquiry", "清空"))
        self.pushButton_inquiry.setText(_translate("Window_course_inquiry", "查询"))

    def init(self):
        with open("username.txt", 'r') as f:
            self.username = f.read()
        if self.username == 'admin':
            self.qList = ["课程号\t\t课程名\t\t\t课程学分",]

            conn = pyodbc.connect(r'DRIVER={SQL Server Native Client 11.0};'
                                  r'SERVER=Beta;'
                                  r'DATABASE=Curriculum_design;'
                                  r'UID=Pdocw;'
                                  r'PWD=123456'
                                  )
            cur = conn.cursor()
            cur.execute('SELECT * FROM kc')
            row = cur.fetchone()
            while row:
                self.qList.append(str(row[0]) + '\t\t' + str(row[1]) + '\t\t' + str(row[2]))
                row = cur.fetchone()
            conn.close()

            slm = QStringListModel(self.qList)
            self.listView_course.setModel(slm)
        else:
            self.qList = ["课程号\t\t课程名\t\t\t课程学分", ]

            conn = pyodbc.connect(r'DRIVER={SQL Server Native Client 11.0};'
                                  r'SERVER=Beta;'
                                  r'DATABASE=Curriculum_design;'
                                  r'UID=Pdocw;'
                                  r'PWD=123456'
                                  )
            cur = conn.cursor()
            cur.execute("SELECT * FROM kc, xxxx WHERE kc.Cno = xxxx.Cno AND Sno = '" + self.username + "'")
            row = cur.fetchone()
            while row:
                self.qList.append(str(row[0]) + '\t\t' + str(row[1]) + '\t\t' + str(row[2]))
                row = cur.fetchone()
            conn.close()

            slm = QStringListModel(self.qList)
            self.listView_course.setModel(slm)

    def clear(self):
        self.lineEdit_courseno.setText("")
        self.lineEdit_coursename.setText("")
        self.init()

    def inquiry(self):
        if self.username == 'admin':
            cno = self.lineEdit_courseno.text()
            cname = self.lineEdit_coursename.text()
            self.qList = ["课程号\t\t课程名\t\t\t课程学分", ]

            conn = pyodbc.connect(r'DRIVER={SQL Server Native Client 11.0};'
                                  r'SERVER=Beta;'
                                  r'DATABASE=Curriculum_design;'
                                  r'UID=Pdocw;'
                                  r'PWD=123456')
            cur = conn.cursor()

            if cno != '' and cname != '':
                cur.execute("SELECT * FROM kc WHERE Cno = '" + cno + "' and Cname = '" + cname + "'")
            elif cno != '':
                cur.execute("SELECT * FROM kc WHERE Cno = '" + cno + "'")
            elif cname != '':
                cur.execute("SELECT * FROM kc WHERE Cname = '" + cname + "'")
            else:
                return

            row = cur.fetchone()
            if not row:
                self.qList.append('NULL\t\tNULL\t\t\tNULL')
                QtWidgets.QMessageBox.warning(QtWidgets.QWidget(), "错误", "该课程未开课！", QtWidgets.QMessageBox.Yes,
                                              QtWidgets.QMessageBox.Yes)
            else:
                while row:
                    self.qList.append(str(row[0]) + '\t\t' + str(row[1]) + '\t\t' + str(row[2]))
                    row = cur.fetchone()
                conn.close()

            slm = QStringListModel(self.qList)
            self.listView_course.setModel(slm)
        else:
            cno = self.lineEdit_courseno.text()
            cname = self.lineEdit_coursename.text()
            self.qList = ["课程号\t\t课程名\t\t\t课程学分", ]

            conn = pyodbc.connect(r'DRIVER={SQL Server Native Client 11.0};'
                                  r'SERVER=Beta;'
                                  r'DATABASE=Curriculum_design;'
                                  r'UID=Pdocw;'
                                  r'PWD=123456')
            cur = conn.cursor()

            if cno != '' and cname != '':
                cur.execute("SELECT * FROM (SELECT xxxx.*, kc.Cname, kc.Credit FROM kc, xxxx WHERE kc.Cno = xxxx.Cno AND Sno = '" + self.username + "') as temp_db WHERE Cname = '" + cname + "' and Cno = '" + cno + "'")
            elif cname != '':
                cur.execute("SELECT * FROM (SELECT xxxx.*, kc.Cname, kc.Credit FROM kc, xxxx WHERE kc.Cno = xxxx.Cno AND Sno = '" + self.username + "') as temp_db WHERE Cname = '" + cname + "'")
            elif cno != '':
                cur.execute("SELECT * FROM (SELECT xxxx.*, kc.Cname, kc.Credit FROM kc, xxxx WHERE kc.Cno = xxxx.Cno AND Sno = '" + self.username + "') as temp_db WHERE Cno = '" + cno + "'")
            else:
                return

            row = cur.fetchone()
            if not row:
                self.qList.append('NULL\t\tNULL\t\t\tNULL')
                if cno != '' and cname != '':
                    QtWidgets.QMessageBox.warning(QtWidgets.QWidget(), "错误", "课程号与课程名不匹配！", QtWidgets.QMessageBox.Yes,
                                                  QtWidgets.QMessageBox.Yes)
                else:
                    QtWidgets.QMessageBox.warning(QtWidgets.QWidget(), "错误", "您未选择此课程", QtWidgets.QMessageBox.Yes,
                                              QtWidgets.QMessageBox.Yes)
            else:
                while row:
                    self.qList.append(str(row[1]) + '\t\t' + str(row[3]) + '\t\t' + str(row[4]))
                    row = cur.fetchone()
                conn.close()

            slm = QStringListModel(self.qList)
            self.listView_course.setModel(slm)
